==============================================
 'gschem and Friends' Electronic Design Suite
==============================================

Copyright (C) 1998-2017 gEDA Developers

This file documents important user-visible changes in gEDA/gaf.  For
more information, please consult the `ChangeLog' file.

Notable changes in gEDA/gaf gEDA 2.1.1.1 - 11/12/17 Rampage Edition

* Expanded support for internationalization (i18n).

* The build system now support using the --with-included-gettext option to
  configure the suite to build and use an in-source international library.

* Font-sizes for widgets on GedaToolbars can now be specified in RC files.

* The toolbar layout in gschem has been improved to better support labels.

* The visibility of toolbar tooltips can now be control using RC keywords.

* The Slot Editor Dialog now incorporates a spinner control to adjust the
  slot number of slotted components. The range is restricted to valid slots
  for the selected component.

* New bitmaps have been added;

      * geda-deslect.png
      * geda-find-attribute
      * geda-properties.png
      * geda-trash-can.png

* libgedathon no longer over-writes existing gafrc when the declare_local_sym
  feature is used.

* libgedathon now supports internationalization (i18n).

Notable changes in gEDA/gaf gEDA 2.1.1.0 - 01/01/17 Rampage Edition

* Improvements were made to both the build system and source code to ensure
  gEDA-GAF builds more reliably on 64 bit platforms. Testing was performed
  using Ubuntu 12.04 and Ubuntu 14.04 64 bit host systems.

* The libgeda API has been completely redone in order to present a library API
  that is not only for in-suite applications.

* Support for internationalization (i18n) has been significantly expanded and
  now includes command-line utilities.

* Extensive revisions have been made to improve performance of gEDA application.
  This is particularly noticeable in gschem.

* A new library, libgedacolor, now unifies color management for the gEDA suite.
  Color-maps are still configured using scheme files, but the use of "friendly-
  color-maps"  is no longer applicable; the new color maps for libgedacolor are
  already "friendly". The library was added to provide a unified API for gEDA
  applications and should be transparent to most users. User who are using
  custom color-maps will need to modify their custom map files.

* A new auto-panning feature has been added to gschem. The auto-pan is only in
  effect while drawing nets and buses and can enabled or disabled through menu
  options.

* The Auto-Number dialog in gschem no longer requires the use of wild-card
  characters in the scope text. This is a new advanced feature that allows
  automatic re-numbering of duplicated reference designators.

* The path for logs file can now be set in initialization files, including
  local gafrc files. This allows logs to be organized on a per project basis.
  The location for logs can also be set using a new GEDALOGS environment variable.

* A new libgeda keyword "log-time" can be use to enable or disable prefixing
  log entries with the time of day.

* The Multi-Attribute Editor Dialog entry now has attribute "word" completion
  identical to the Single-Attribute Editor Dialog.

* The list of valid attribute used by gsymcheck when checking symbol files is
  now users configurable. The list can be set in system-gsymcheckrc.

* The list of known devices recognized by gsymcheck when checking the device
  entries in symbol files is now users configurable. The list can be set in
  system-gsymcheckrc.

* Symbol files can now be renamed using the Component Dialog.

* The number of user defined colors was increased by 6 to a total of
  10 user definable colors in each color map.

* The main menu system has been modified to automatically build a basic
  fall-back menu when errors are discovered in the menu RC file.

* The height of the status bar in Gschem can now be set in the gschem-gtkrc

* HotKey dialog now includes actions icon and a column to display the actual
  binding string. User can enable or disable viewing the action column with
  the setting being retained between session.

* The Slot Editor Dialog now displays the total number of slots per component.

* New features have been added to the Page Select Dialog:

      Accept drag-and-drop of schematic or symbol files.
      Opened pages can be re-ordered either up or down.
      Auto scrolls to selection.
      Shows long filename as tooltip when showing short names.
      Optionally adjust height of dialog automatically.

* Exchange image file now retains the user preference to update all selected
  images between session. Previously the user preference was only retained for
  current session.

* Additional preference variables have been incorporated in new the configuration
  system allow retention of changes using the Preferences dialog:

      continue-component-place
      embed-components
      enforce-hierarchy
      force-boundingbox
      keyboardpan-gain
      netconn-rubberband
      select-slack-pixels
      snap-size
      sort-component-library
      object-clipping

  Uses of these keywords in rc files is still permissible and will over-ride the
  preference setting.

* A new gschem command line options has been provided to specify a title-block at
  startup.

* A new gschem command line options has been provided to startup minimized.

* The command line option to add a directory to the Guile path now has a long option.
  The "-L" option has been replaced with "-g" or "--guile".

* gsymcheck now supports the standard command-line version options.

* Programs in the geda-gaf suite now support quite mode in conjunction with the version
  option to assist with extraction of dotted version information.

* New Scheme API have been added:

      gschem-bmp-image
      gschem-jpeg-image
      gschem-tiff-image

* The maximum zoom magnification in gschem has been increased slightly.

* gnetlist automatically creates any subdirectories specified in the output name.

* Scheme API function gschem-exit has been enhanced to allow routine to optionally
  pass an exit code

* New bitmaps have been added;

      * gaf-tools.png
      * gaf-add-attribute.png
      * geda-close.png
      * geda-redo.png
      * geda-tools.png
      * geda-undo.png
      * geda-inspect-grn.png
      * guile-logo.png

* Context menus in gschem now have tool-tips.

* A new option has been added to the translate dialog to allows users to disable
  the zoom afterwards when translating components.

* Symbol for basic flow-charting have been added to the symbol library!

* Issues resolved:

* Auto numbering of reference designator when copying components has been restored,
  this feature must be enabled in a gschemrc file and is not enabled by default.

* gnetlist now aborts with a useful message if the output file cannot be created
  due to insufficient permission.

* Detaching an attribute no longer sets the undo state if nothing was detached.

* Attaching an attribute to an object now updates the Multi-attribute Dialog if
  the dialog is open.

* Log and Console window settings are now saved in the new configuration system.

* The menu toolbar radio togglers in Gschem are now set at startup when the tool-bar
  styles are uniform.

* Symbols file can now be checked directly in Gschem with gsymcheck using the
  "Check Symbol' option under the tools menu. An options dialog allows users
  to view the log when errors or warnings have been detected.

* Utilities to check symbol libraries can now check the validity of URL referenced
  by documentation attributes.

* gattrib now saves and restores the main window size and position.

* gattrib's search function now auto fills in selected text.

* Minor issues have been resolved in gsch2pcb.

* gsch2pcb is now XDG compliant if this option was compiled into geda-gaf.

* Fixed errors in Libgedathon when processing pin objects with missing a
  label and or pinnumber attribute.

* gschem now zooms to a small grid area when the schematic is empty and the
  zoom extents function is used. Previously zoom extents would zoom to the
  limits if the drawing if no objects were present.

* gschem no longer has to be restarted to enable auto-save when enabled from
  preference dialog.

* gschem now closes the single documents after confirming to save changes,
  previously the document was saved but not closed if the document was
  modified and the user selected save and close. The multi-document close
  confirmation dialog was unaffected.

* gschem --output <filename> command line option has been fixed.

* The array dialog function no longer transposes X-Y offset distances.

* Page changed status is now updated more regularly on the Page Select Dialog.

* New pins are drawn orthogonal in gschem, this make adding pins easier.

* Issues with the Pin dialog selection tracking have been resolved. This issues
  also effected the Line Type and Slot Editor dialogs.

* Icon states on the pop-up menu in gschem are now displayed at start-up if
  the setting is enabled.

* After ascending hierarchy the selection objects in the parent page remain
  selected and become the current selection.

* libgeda no longer makes backups of empty files.

* libgeda has improved support for builds with NLS disable. Previous versions
  initialized language support for scheme when configured with --disable-nls.

* libgeda has improved handling of embedded picture filenames without a path
  in the name.

* libgeda now automatically creates pin type attributes when values are set
  and the attributes did not previously exist.

* Gtk no longer writes errors messages to the console when the "print" button
  is click on the Print Dialog.

* The Scheme function component-library-search without an optional prefix now
  results in the symbols being listed on the "Local" tab of the component select
  dialog.

* Missing Components no longer loose their X-Y position when files are saved
  with placeholders.

* The command-line option for the layout now works correctly with the gaf utility.

* gsymfix has been improved to add missing pin attributes if any attribute is
  not present not just the label.

Notable changes in gEDA/gaf 2.1.0.0 - 04/01/15 Rampage Edition

* This release of the Rampage Edition of the gEDA-gaf suite commemorates
  the 17th Anniversary of the first public release of gEDA-gaf. The 2.09
  series releases reflected a very aggressive development of new features
  and major enhancements in many areas. Numerous enhancements focused on
  existing features and functions that did not always work as expected.

* New editing functions provide powerful methods to improve productivity.

  A new Extend Objects functions allows linear objects to be extended to
  other objects with a simple key press.

  A new Break function allows Arcs, Boxes, Circles, Linear objects, and
  Paths, both closed and open, to be broken at user specified points.

  A Powerful new Array dialog has been added to create arrays of selected
  objects. Creating Arrays allows both verb-noun or noun-verb operations.

  A new Auto-Snap Objects to Grid editing function has been added allowing
  Selections to be quickly repositioned to the current Grid snap. The Auto
  Snap features works with all objects types, including graphical and image
  objects.

  A new bimodal Offset function provides editing methods to quickly create
  new objects at programmable distances. The distance can be specified by
  entering a value in a dialog or offsetting Selection sets to the current
  pointer position using hot-keys. The offset distance is retained between
  operations.

  A new Select Last function has been added to select the last object created
  or edited.

  The visibility of netname attributes can now be toggled while inside an
  action.

  A new RC keyword; third-button-cancel, allows user to specify a preference
  for canceling operations using the third mouse button. In addition, object
  adder modes can now be cancel by double-clicking the final entry point.

  A new Zoom to Magnification feature allows user to zoom to a specified level.

* Picture replacement operations can now be undone.

* A new Export functions allow exporting of embedded objects, including image
  objects.

* Picture objects no longer need to maintain the original aspect ratio. Aspect
  ratios of image objects can be freely modified using Grips. The Ctrl key can
  be combined to maintain the aspect ratio identically to the old behavior.
  When exporting images using the new export feature, options are provided to
  export the image at the original or the current aspect ratio and size.

* Coordinates can now be displayed in the status bar using Cartesian and vector
  formats. The format can be changed at any time, including inside of an action,
  by right clicking on the coordinates widget and selecting the format from a
  pop-up menu. Vector formats revert to the previous selected format when not
  applicable to the active context.

* Pointer button assignments can now be set via a pop-up menu by clicking on
  the associated status widget on the Status bar. Assignments can still be set
  using in the Preferences Dialog or over-ridden using RC keywords, but the
  new method allows changing assignments while inside an action.

* The status text now changes to blue when inside of an editing action.

* F-Keys have been assigned to common/standard program functions.

* Menus in Gschem have been revised for better organization with enhanced
  options. The tools menu now includes access to Version tracking and
  alternative simulations back-ends. A toggle widget has been added to
  the Options menu to toggle a new drag-can-move preference variable in
  order to enable and disable dragging moving.

* A new File/Export main menu fly-out was added for options to export both
  embedded components and pictures. Exporting pictures utilized a new custom
  Image Chooser Dialog allowing user to select from a variety of options.
  All available image formats suppported by host libraries are supported.

* Draw-Order functions have been added to the Page menu as a fly-out using
  Scheme, allowing users to manipulate the order in which objects are drawn.

* The pop-up context menu now provides options for Copy, Move, Rotate, Mirror,
  Component Properties, Color, Zoom to Mag, and Zoom to Selection. Additional
  options have also been add as fly-out side menus to the pop-up menu. Fly-out
  options use the X-Y location of the pointer when the context was invoked.
  Copy, Move, Rotate, and Mirror actions were reinstated and work identically
  to previous implementations.

* A new context menu has been added for creating Polygon objects. Once the
  path has has been started, a right button pop-up menu allows uses to select
  from a variety of options, including an option to close the polygon.

* Additional icons are provided for "Move", Simulations, DRC, and attribute-
  reset. The default icon for "Move" was changed to have a more consistence
  theme with other editing icons.

* Menu tool-tips for File/Recent and Sessions/Restore now respond properly to
  user preferences. Tool-tips for symbol names on the Component dialog field
  shows the full path to symbol file.

* Anti-alias options were added to the Preference dialog in Gschem for the
  anti-alias method to be used by the chosen render. Modifing the anti-alias
  method longer requires a re-start for the new setting to take effect.

* Page Select Dialog has been enhanced to allow displaying file names without
  the paths, a toggle switch allows users to switch the path portion on or off
  in the tree-view. The full path is shown in the tool-tip when switched off.
  The user preference is retained between sessions.

* Page Select Dialog has been enhanced to allow re-sequencing of documents via
  the right context menu. Changing the sequence not only affects the tree view
  on the Page Select Dialog, the actual order of the documents is changes.

* Page Select Dialog has been enhanced to support drag and drop operations.
  Schematic or symbols can be opened by dropping file objects on the tree
  view.

* Page Select Dialog has been enhanced to support automatic resizing of the
  dialog based on the number and position of the dialog, the auto-height
  feature can enabled or disable using a toggle control on the dialog. The
  users preference is retained between sessions.

* The appearance of Auto-Number Dialog has been improved and is more robust.
  The dialog was enhanced with frames and separate filter options for scope
  text including options for wild-cards and a list of recently used filters.
  Recent filters are not retained between sessions.

* The Line Type Dialog now includes an options combo to set the line end-type.

* The Selection Tracker system used by editing dialogs has been enhanced to
  to update dialogs tracking a selection when the active page is changed.

* Backup files are now properly removed after using "save-as"

* Symbol version checking can now be disabled on a per reference basis using
  a new option on the Component Properties Dialog.

* Additional Symbols, including symbols for more modern semiconductors have
  been added to the library.

* Libgeda API has been expanded to provide more functionality and has improved
  stability. The API now includes image manipulation routines allowing embedded
  images to be written back out as image files either with the original width
  height ratio or the current insertion ratio, to a variety of image types.

* Traversing Hierarchy Down schematic routines now check and return files in
  the current working directory even if the the current directory was not in
  the specified path setting of directories to search.

* Symbol version checking can now be disabled globally. This feature is only
  intended to be used when implementations provide high-level version tracking.

* A new Scheme API function, `log!`, has been added to the `(geda log)` module
  allowing Scheme code to emit log messages in the same way that the C code does.

* Libgedacairo offers improved image quality and better documentation. The Marker
  Threshold Distance is now user customizable and can be set on the Preferences
  Dialog in Gschem.

* New Libgedathon scripts; geda-snap-grid, gsym-attribute, gsym-set-font-size
  and gsym-set-visibility provide solutions for "batch editing" geda-gaf files.

* Libgedauio has more Widgets and expanded Doxygen documentation. The new
  Image Chooser Dialog allows previewing of image files when selecting image
  to insert into Schematics.

* The GedaComboBox widget has global settings that can be set through gtk RC,
  or changed via instances using right mouse pop-up menu independent of the
  application or dialog in which the widget is used, allowing users to choose
  between menu style or tree-list style combo boexes, regardless of the host
  system theme setting.

* Color Menu view types can be set on any dialog with the color button with
  the settings retained between sessions.

Notable changes in gEDA/gaf 2.0.9.7 - 03/15/15 Rampage Edition

* This is a special intermediate release to celebrate the 17th Anniversary
  of first GUI version of Gschem. The next major release is scheduled for
  Apirl 1st, 2015 in commemoration of the first public release of geda-gaf.
  Much of the work for the 2.1 release had been completed, this intermediate
  reflect many hours of work and has passed all preliminary testing for the
  2.1 release, which will have several additional new features.

Notable changes in gEDA/gaf 2.0.9 - Rampage Edition

* Gschem has improved performance and improved memory management. The main
  menu has been revised for better organization and extended with improved
  access to simulation netlist generators. New features have been added
  with emphasis on user configurability.

* A new Session system manages collections of schematics and or symbols.
  Sessions can be invoked at startup via a new command-line option and
  offers a configurable startup dialog. The active session name can
  optionally be displayed in the title bar.

* Users can now elect to show the full path in the title bar or just the basic
  filename as before. File names are prefixed with an asterisk when ever the
  current page has been modified and not saved.

* A new Component Properties dialog allows users to change components with
  out having to edit the schematic file with an editor. The Component
  Properties dialog is also used for editing symbols, allowing users to set
  or edit standard attributes for symbols from a single access point.

* Grids systems have been completely revised and feature user configurable
  dual color mesh and dots. Colors for the minor and major step can be set
  separately for each grid type. The alpha transparency for grid types are
  also user configurable. The settings can be adjusted to produce the same
  "dull gray" lines and dots as before but adding colors can improve the
  contrast and usability of the grids.

* The File Chooser dialog used for selecting and saving documents has been
  replaced. The new dialog retains position and geometry settings like other
  gschem dialogs. The File Chooser dialog also retains user preferences for
  filters between sessions.

* Additonal Symbols, including symbols for newer more modern semiconductors.

* Libgeda API has been expanded to provide more functionality and has
  improved stability. The API is cleaner and the Doxygen documentation
  has been improved.

* Libgedacairo offers improved image quality and better Doxygen documentation.

* Libgedathon now accept either a string or an integer for the pin number
  argument. The Doxygen documentation has been improved.

* Libgedauio has more Widgets and expanded Doxygen documentation. The
  new File Chooser implemented in gschem is a new Libgedauio dialog.
  The library's build system is better organized to accommodate future
  expansion. Other new widgets include custom Combo boxes and TreeView.
  The Doxygen documentation has been expanded.

* The build system is compatible with Automake 1.9, the previous version
  required Automake 1.11 or newer but this is not available on some older
  systems.

  Numerous Bugs and annoyances resolved!

Notable changes in gEDA/gaf 2.0.8 - Rampage Edition

* Gschem has improved performances, additional toolbars, improved stability,
  enhanced appearance and improved memory management. The main menu has been
  revised to improve clarity and organization. New features have been added
  such a Invert Selection, Zoom-To Selection,

* Libgeda extensively revised to provide a more generic API. The library
  has improved performance from previous versions and uses less memory,
  The was mostly achieved by eliminating the needless passing of parameters.
  All Object types are now object oriented to improve memory management
  by off-loading responsibility to glib. The API has been extended to
  provide more functionality for applications. The configuration storage
  systems provided by Libgeda have been revised, mostly the new system,
  which no longer utilizes gnome based virtual file systems, aka gvfs. The
  use of GFile exponentially increased dependencies and was eliminated.

* Symbol libraries significantly expanded.

* A new library, Libgedathon provides an API for Python scripts.

* A new library, Libgedawidget provides an "Gtk" like widgets to enhance
  geda-gaf applications and extend support of code obsoleted by Gtk
  developers.

* The build system has been "heavily" modified and the source code
  completely reorganized. New macros provide better organization and
  greater flexibility.

* New install scripts, geda-install and geda-install-bin facilitate
  installation from local builds. (Note that geda-install-bin replaces
  ginstall_local)

Notable changes in gEDA/gaf 2.0.7.8 - Rampage Edition

* The Coordinates Dialog allows direct entering of World Coordinates.
  If an XY coordinate is "entered" when not in an Action, the cursor
  will be positioned over the point so that "hot-keys" can be used,
  to begin an action starting from an exact point. Parentheses for
  the coordinates is optional.

* Gschem now supports bidirectional Drag & Drop. Contents of Schematic
  drawings can be "dragged" from one gschem window to any other instance
  of gschem. The target can also be the World Entry of the Coordinates
  Dialog of the same or another instances of gschem. Dropping schematic
  objects on the World Entry requires that a value be entered immediately
  afterward for the dropped object to be inserted into the drawing at the
  specified point. Dropping a ".sch" file results in the file being loaded
  into new window. The results of dropping a ".sym" file depends on where
  the file is located. If the symbol file is in a Library source directory
  then the symbol is inserted into the current Schematic, otherwise the
  symbol file is opened in a new window for editing as a Symbol definition.

* "Save As" can now optionally add the ".sch" or ".sym" file extension.
  based on the filter selection.

* Generated color images file can now be inverted. User can choose between
  the Display or the Print Color map on Write Image Dialog.

* Gschem is more tolerent of errors in RC files.

* Message dialogs are more consistence.

Notable changes in gEDA/gaf 2.0.7 - Rampage Edition
=================================

* The Gdk cursor to be use over the Drawing Area is now user
  configurable via the Preference dialog.

* A New Path drawing tool from the Master branch was implemented.

* Many user settings are no long dependent on RC entries and are
  saved at the end of each session if the "save settings on exit"
  option is enabled, allowing users to change settings on-the-fly
  without permenently changing their configuration.

* New "Deselect" mode can be used to remove objects from a selection
  set.

* The color of grips, text markers, and cues can be changed using a
  color selector dialog. In addition the size of grips, markers and
  cues can be customized by the user in the Preferences dialog.

* Gschem no longer closes the GUI when the last file is closed.

* Gschem's "Save As" can now optionaly add the ".sch" file extension.

* Refdes number are reset when using buffers and the clipboard.


Notable changes in gEDA/gaf 2.0.6 - Rampage Edition
=================================

* GUI Enhancments for gschem GUI with better consistency between
  dialogs. Most dialog are now modeless and react to selection
  changes.

* Component selection enhanced to facilitate selection of library
  symbols with larger libraries. The selection dialog provides a
  more advanced interface to allow catagorization of symbols.

* Symbol libraries significantly expanded. A new "style" system is
  introduced. The new style scheme provides a "standardization" of
  symbols names. Filtering based on style is supported with user
  configurable definitions and GUI options.

* Additional support scripts have been added to supplement the suite.
  Scripts are provided to batch test and repair libraries.

* Man pages have now been added for all geda-gaf programs.

Notable changes in gEDA/gaf 2.0.1 - Rampage Edition
=================================

* GUI's for gschem and gattrib have received Major Make-Overs with
  toolbars and additional menu options, check box menu items, and
  more. All user options can now be set in Gschem via a multi-tab
  dialog with custom controls without adding GTK+3 as dependent or
  any other new dependencies. Dialogs uniformity has been improved.

* Functionality of gattrib has been greatly extended including a
  new Search and Replace function complete with session search
  history!

* Gattrib no long launches into a a file selector dialog, files can
  now be loaded or closed via menu or toolbars, The editing bar is
  now fully functional and mouse menus added. Embedded GTK-Sheet has
  been updated to a newer, more stable version. GTK-Sheet code has
  been "modularized" to facilitate future improvements.

  Merry Christmas Everyone!

Notable changes in gEDA/gaf 1.9.2
=================================

* A new schematic renderer library, `libgedacairo' has been added, and
  all tools have been updated to use it.  Related changes:

  - The following configuration functions have been removed:

         output-capstyle         paper-sizes
         output-color            postscript-prolog
         output-orientation      print-command
         output-type             setpagedevice-orientation
         paper-size              setpagedevice-pagesize

  - The following `gschem' configuration items have been added:

         print-paper             print-color
         print-orientation

  - `gschem' now generates PDF files in addition to PostScript files.

* A new `gaf' command-line utility has been added.  It provides a
  number of subcommands:

  - `gaf export' can be used to convert schematic files to PNG, SVG,
    PDF, PS and EPS, with detailed control of paper size and margins.
    It supports multi-page PDF and PS output.

  - `gaf config' can be used to manipulate the project, user, and
    system configuration stores (see below).

  - `gaf shell' provides a Scheme REPL for batch manipulation of
    schematic and symbol files.

* New project, user and system configuration stores have been added,
  using a format similar to .desktop files.  They can be manipulated
  using the `gaf config' tool.  Configuration parameters for most
  tools will be converted to use this mechanism in future releases.

* The changes to highlighting of dangling net ends in gEDA/gaf 1.8.0
  have been reverted.  All dangling ends are once again flagged with a
  brightly-coloured square.

* When editing a component with the `gschem' multi-attribute editor,
  the dialog will now show the symbol name in its title.

* When using "Down Schematic" command in `gschem', an error message
  will now be displayed if the subcircuit schematic cannot be loaded.

* Printing now uses a light background color map by default.

* Objects can now have the line end "cap style" adjusted in `gschem'.

* `gnetlist' now accepts the `-i' and `-g' command-line arguments
  together.  If you specify both `-i' and `-g', `gnetlist' will enter
  the Scheme REPL after loading the requested backend but before
  executing it.

* `gattrib' now has translations for the user interface and various
  messages.

Notable changes in gEDA/gaf 1.8.0
=================================

* `gschem' and `gnetlist' have updated and rewritten user guides.

* All tools now give more informative error messages if they are
  unable to load schematic or symbol files due to syntax errors.

* All tools now correctly handle schematic and symbol files with `\r',
  `\n', or `\r\n` line endings, or a mixture.

* Unconnected pin ends and net ends are now all drawn with the same
  box marker in `gschem' and printed output.

* Net segments with at least two connections (including indirect
  connections via `netname=' attributes) are now drawn with arrowheads
  rather than box markers on dangling ends in `gschem' and printed
  output.

Notable changes in gEDA/gaf 1.7.2
=================================

* `geda-gaf' now requires GTK+ 2.16.0 or later.

* A greatly expanded Scheme API has been added to gEDA/gaf for use by
  extension authors.  See the `geda-scheme' Info manual for more
  details.  Existing extensions may need to be modified to load the
  `(geda deprecated)' or `(gschem deprecated)' modules.

* The `component-library-search' function for `gafrc' files now skips
  directories without symbols, and searches for libraries recursively.

* `gschem' keybinding improvements:

  - Keybindings are now unaffected by Caps Lock.

  - Keystrokes are displayed using the same characters as on keycaps
    (e.g. `:' instead of `colon').

  - Keystrokes may use extended modifiers (Super, Hyper and Meta).

  - Key bindings can be modified in any rc file or interactively using
    the `global-set-key' function.  See notes in `system-gschemrc' for
    examples.

* `gschem' now displays help files and component documentation on all
  platforms, including Windows.  The `locate' tool is no longer used
  to search for component documentation files.

* The `schdiff' tool for generating visual diffs of schematics and
  symbols has been added.  It can be used with most version control
  systems.  See `man schdiff' for more details.

* The `bom' and `bom2' backends to `gnetlist' now give error messages
  if no attribute file can be found.  The `-O attrib_file=FILE' and
  `-O attribs=ATTRIB,ATTRIB...' options have also been added.

* A new `ewnet' backend has been added to `gnetlist'.  This outputs
  netlists for use with the National Instruments ULTIboard layout
  tool.

* The `verilog' backend to `gnetlist' now supports concatenated net
  naming like "{a,b,c[3:0]}".

* `gsch2pcb' no longer supports the `m4_command' parameter in project
  files.

* The `--m4-pcbdir' and `--m4-file' arguments to `gsch2pcb' now work
  again.

* `gsymfix.pl' has been renamed to `gsymfix'.

* Man pages are now available for all programs installed as part of
  gEDA/gaf.

* The undocumented programs `gnet_hier_verilog', `gsymupdate', `gschupdate'
  and `sch2eaglepos.sh' are no longer installed to ${prefix}/bin.

Notable changes in gEDA/gaf 1.7.1
=================================

* gEDA is now compatible with Guile 2.0.

* gEDA/gaf applications no longer complain when trying to load an rc
  file twice, or when an rc file doesn't exist.

* `gschem' allows objects to be moved by dragging without having to
  select them first.

* `gschem' now supports keybindings with more than one modifier key,
  and "Deselect" is bound to <Control Shift A> by default.

* `gnetlist' correctly handles multiple renames of the same net.  This
  resolves some long-standing bugs with multipage schematics.

* The `spice-sdb' backend for `gnetlist' now has built-in support for
  `SUBCKT_NMOS' and `SUBCKT_PMOS' devices.

* A new `makedepend' backend has been added to `gnetlist'.  It
  generates Makefile code for SPICE simulation dependencies.

* Visibility of embedded component attributes are now preserved by
  `gattrib'.

* `gsch2pcb' correctly handles footprint names with hyphens (`-').

* `gsch2pcb' project files support quoting and escaping in
  `schematics' entries.

* Considerable enhancements to Unicode support when printing
  schematics or exporting PostScript.

Notable changes in gEDA/gaf 1.7.0
=================================

* All gEDA/gaf applications now handle configuration files much more
  strictly, and provide much more useful feedback when an error
  occurs.

* Several changes to `gschem' command-line options:

  - The `-t' option is no longer supported.

  - Several command-line options now support a long-form alternative.

  - The `-s' option can now be used to run multiple Scheme scripts
    during `gschem' startup.

  - A new `-c' option is available, which runs a Scheme expression
    during `gschem' startup.

  - A new `-L' option is available, which adds a directory to the
    Scheme load path.

  - A new `-V' or `--version' option is available, which displays
    version information.

* `gschem' now provides a "Select All" function, which is bound to
  <Control a> by default, along with a corresponding "Deselect"
  function.

* In the `gschem' "Add component" dialog, filtering the component
  library will expand matching libraries.  If the filter is cancelled,
  all libraries are collapsed.  Components can now be selected by
  double-clicking on them in the component list.

* The `gschem' "Edit Text Properties" dialog now has an easier to use
  "Alignment" menu.

* Printed text size now better matches on-screen text size in
  `gschem'.

* Special characters, including commas, are now escaped or quoted
  appropriately in `gattrib' CSV output.

* Several changes to `gnetlist' command-line options:

  - Four command-line options specific to the `spice-sdb' backend have
    been removed.  They can be replaced with `-O <option>' according
    to the following table:

        -e, --embedd              -O embedd_mode
        -I, --include             -O include_mode
        -n, --nomunge             -O nomunge_mode
        -s, --sort                -O sort_mode

  - The list of available backends is now obtained using a new
    `--list-backends' option.  `-g help' no longer outputs a list of
    backends.

  - A new `-L' option is available, which adds a directory to the
    Scheme load path.

  - A new `-V' or `--version' option is available, which displays
    version information.

  - When run with invalid command-line arguments, `gnetlist' now exits
    with non-zero exit status.

* Several `gnetlist' backends have now been fixed so that it should no
  longer be necessary to set an expanded Guile stack in gEDA's config
  files.

* The `spice-sdb' backend for `gnetlist' now supports probes
  (`TESTPOINT' devices).

* The undocumented `mk_verilog_syms' program is no longer installed.
  The symbols it creates are still installed to
  `${prefix}/share/gEDA/sym/verilog'.

Notable changes in gEDA/gaf 1.6.2
=================================

 * PNG export from `gschem' will now be cropped correctly.

 * The `partlist' backends for `gnetlist' now handle hierarchical
   refdes correctly.

 * On Windows, `gschem' and `gattrib' will no longer launch with a
   command window visible.

 * `gnetlist-arg' is no longer valid in `gsch2pcb' project files.

Several other bugs were fixed, including a major crash bug in
gnetlist.

Notable changes in gEDA/gaf 1.6.1
=================================

* Added accelerator mnemonics for root menus in gschem

* Lots of updated and new language translations in libgeda, gschem, and
  gattrib.  (Courtesy of language translators and Launchpad)

* Updated the shipped documentation from the official gEDA wiki

* Fixed the following bugs:

  - 2876373: Fix rendering with zoomed out dashed lines
  - 2901183: Fix for some manpage issues
  - 2904715: Don't update page connectivity from o_place_rotate()
  - 2949232: Fix slot editing routines to not edit inherited attributes
  - Cherry picked some other bug fixes from master that should be in
    this release

Notable changes in gEDA/gaf 1.6.0
=================================

* Fixed the GtkItemEntry code inside of gattrib code so that it builds
  using gtk+ > 2.16.x.

* In gschem, rubberband pin to pin connections by adding nets.

* Cleanup of the slot handling code in libgeda.

* Fixes/updates to the MinGW port.

* Updated the shipped documentation from the online wiki.

Notable changes in gEDA/gaf 1.5.3/1.5.4
=======================================

* NOTE: gEDA/gaf 1.5.3 was released with some critical bugs, so
        it was withdrawn before it was widely distributed.

* Text rendering using native system fonts:

  - The various programs in gEDA/gaf no longer uses its own built-in
    line font.

  - Native system fonts are used for rendering, giving support for a
    wider range of symbols, and better looking schematics.

* Always use PostScript fonts in gschem's PostScript output.  The
  "output-text", "text-output" and "output-vector-threshold" config
  functions have been removed.

* Image rendering in 'gschem' uses cairo instead of GDK.

* Numerous build system changes:

  - gEDA/gaf is now distributed as a single source archive, called
    gEDA-<version>.tar.gz.

  - GTK+ 2.10 or newer and Guile 1.8 or newer are now required.

  - `intltool' is no longer required.

  - Documentation is now installed to ${docdir} (usually
    ${prefix}/share/doc/gEDA).

* The attribute edit dialog in `gschem' now has completion of most
  common attribute names.

* The multi-attribute edit dialog in `gschem' now shows unpromoted
  symbol attributes.

* Menu items in `gschem' now have icons and properly aligned key
  bindings. They also support accelerator keys.

* The `gschem2pcb' and `PCBboard' netlist backends have been removed.
  It is recommended to use `gsch2pcb' instead.

* Check for and reject non-footprint PCB files in 'gsch2pcb'.

* Removed unimplemented "File->Open" feature in 'gattrib'.

* Added --disable-gattrib command line flag to ./configure to disable the
  building of 'gattrib'.  This is useful if you are building against
  gtk+ 2.17.x which breaks 'gattrib'.

* 'gnetlist' does not recommend drc2 every time it runs. The drc2 backend
   is only useful in certain circumstances.

* Assign shortcuts "vd" and "vl" for changing between color schemes
  in 'gschem'.

* Fix problem with attached net attribute not being honored in 'gnetlist'.

* Focus the "save" button in the close confirmation dialog in 'gattrib' and
  'gschem'.

* Accept empty attributes in the src file in 'tragesym'.

* Cleaned up the slot dialog box in 'gschem'.

* Changed the grip size rendering in 'gschem' to be reasonably sized when
  zoomed in a lot.

* Introduction of a new attribute searching API in 'libgeda' and 'gschem'.

* Improvements and cleanup to the 'gnetlist' and 'gsymcheck' test suites.

* Fixed the following bugs:

  - 1758673: Combine source tarballs
  - 2058707: gschem, gattrib: Dangerous button focus in "Save changes"
             dialog at quit
  - 2430369: gschem: Deselect invisible attribs with their parent object.
  - 2449060: Graphic state left inconsistent cancelling from net mode
  - 2460301: libgeda: Make o_complex_promote_attribs() respect keep_invisible
             and libgeda: Make o_complex_copy() actually copy.
  - 2455061: Gnetlist output changed, and tests fail with recent GLib
  - 2655088: autogen.sh: Make sure to exit if autopoint fails.
  - 2823703: gnet-pcbpins.scm: Quote pins names if they contain comma
             or close parenthesis.
  - 2823755: gnetlist: Fix DEBUG builds.
  - 2836109: build-sys: Add check for groff html driver.

* Spanish translation were updated.

* Lots of code, infrastructure, and doxygen documentation cleanup and
  refactoring.

Notable changes in gEDA/gaf 1.5.2
=================================

* `gschem' now uses Cairo for all rendering.  This allows for
  everything to be rendered anti-aliased.

* `gschem' now uses a mesh grid instead of dots by default.

* Net junction cues in `gschem' are drawn smaller now.

* Copy and paste now works between different `gschem' instances (using
  the X selection).

* Recent files are no longer opened in a new `gschem' window.

* Major, *backwards-incompatible* changes to color handling in
  `libgeda' and `gschem'.

  - All colors are specified using hexadecimal `#RRGGBB' or
    `#RRGGBBAA' syntax.

  - The print and display color maps are now separate.

  - A new Scheme syntax is used to inspect and modify color maps.

  - If you wish to use a light background in `gschem', add the line:

      (load (build-path geda-rc-path "gschem-colormap-lightbg"))

    to your personal or project gschemrc file.

* Attributes of embedded objects are now shown in the right color.

* Bus pins are now supported by `gschem' and `libgeda', but are *not*
  properly supported by the netlister.  The pin type can be modified
  by selecting a pin, then right-clicking it and selecting `Edit pin
  type...'.

* All of the symbols were modified to use overbar markup tags ("like
  \_this\_") instead of separate lines.

* Log files are now saved to $HOME/.gEDA/logs rather than being
  dropped in the current directory.

Notable changes in gEDA/gaf 1.5.1
=================================

* GTK+ version 2.8.x or later is now required.

* The selection behaviour in `gschem' was changed.

  - Lines, unfilled boxes, unfilled circles, arcs, pins, nets, and
    buses must be selected by clicking on the drawn path itself.

  - Filled boxes, circles, text, and components, may be selected by
    clicking anywhere in the bounding box.

  - The default mouse click distance required to select an element was
    increased to 10 pixels.

  - Double-clicking on a net segment selects all connected net
    segments.

* The percentage step in or out while zooming the display in `gschem'
  is now configurable with the `zoom-gain' gschemrc parameter.  The
  default value is 20%.

* The size of steps when panning with the mouse wheel or with a
  trackpad in `gschem' is now adjustable with the `scrollpan-steps'
  gschemrc parameter.  The default setting scrolls in steps of 1/8 of
  a screen.

* A number of improvements were made to the `gschem' component
  selection dialog.

  - The dialog now shows a table of top-level attributes in the
    selected symbol.

  - It is now possible to expand/collapse a library by clicking
    anywhere on its row.

* Changes to fill- and line-styles in `gschem' can now be undone.

* Arcs can now be adjusted in `gschem' using an arc angle dialog.  It
  can be accessed by selecting an arc and selecting Edit->Edit.

* It is now possible to rotate objects while placing them in `gschem'.

* Support for arbitrary filled and unfilled paths, using a subset of
  the SVG path syntax.  For more information, please see the file
  format specification.
  <http://wiki.geda-project.org/geda:file_format_spec>

  - `gschem' does not yet provide a GUI for creating or editing path
    elements.  However, it does support rendering them.  They can also
    be printed.

  - Some of the symbols in the component library were updated to use
    paths.

* A Scheme evaluation prompt was added to `gschem'.  It can be
  accessed by typing `:'.

* Improved algorithm for drawing hatched fills both on screen and in
  PostScript output.

* Color selection dialogs and menus in `gschem' now show the actual
  color as well as the description.  Color names are now translatable.

* `gattrib' now prompts to save changes.

* All of the unimplemented menu items and pages in `gattrib' were
  removed.

* The `always-promote-attributes' gafrc parameter now takes a list of
  strings as an argument.  The space-delimited string syntax is
  deprecated.

* Some optimisations were made to the `gnetlist' connection traversal
  algorithm to speed up netlisting large designs.

* A new netlist backend was added to support Liquid PCB.
  <http://www.liquidpcb.org/>

* The `bom2' netlist backend now generates a `qty' column.

* Several improvements and fixes were made to the `systemc' backend.

* The `--gnetlist-arg' option to gsch2pcb can now be used to pass
  extra `gnetlist' arguments.

* `gsch2pcb' now emits files with the latest `pcb' file format.

* The `gxyrs' pick-and-place tool was added.

Notable changes in gEDA/gaf 1.5.0
=================================

* Magnetic net mode in `gschem'. Magnetic mode lets you draw nets and
  automatically connect to valid end points (such as pins and other
  nets).  The `magnetic-net-mode' gschemrc parameter can be used to
  enable/disable this feature.

* Rotating a component while moving it in `gschem' now rotates around
  the current mouse location.

* The `verilog' and `vhdl' backends now work again.

* Embedded components can now be mirrored.

* The `pads' netlist backend now uses CRLF line endings.

Older versions
==============

Release notes for older versions of gEDA/gaf are available on the gEDA
website.  <http://www.gpleda.org/news/index.html>

..
   Local Variables:
   mode: text
   End:
