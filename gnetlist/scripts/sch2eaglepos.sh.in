#!/bin/sh

VER=@VERSION@

# By Braddock Gaskill (braddock@braddock.com), August 2004.  This
# software is hereby declared to be in the public domain by Braddock
# Gaskill, the author.
#

XOFFSET=40000
YOFFSET=33000
#XSCALE=10000
#YSCALE=10000
XSCALE=9000
YSCALE=9000

ERR_FILE_NOT_FOUND=2

BeVerbose=false   # toggle babel on off

# ------------------------- Define General Functions ----------------------

do_show_help()
{
   case $1 in
         "1") # Quick help
              echo
              echo "A script to extract relative positions in a schematic"
              echo  "and generate corresponding MOVE instructions for Eagle"
              echo
              echo Usage:   `basename $0` '[-options] <inputfile.sch>'
              echo
              echo ;;

         "2") # Basic help
              echo
              echo "sch2eaglepos will read a gschem schematic and attempt to extract"
              echo "the relative positions of the components in the schematic and"
              echo "generate corresponding MOVE instructions for Eagle. You will"
              echo "likely have to adjust XOFFSET, YOFFSET, XSCAL, and YSCALE at the"
              echo "top of the script to obtain usable positions."
              echo
              echo Usage:   `basename $0` '[-options] <inputfile.sch>'
              echo
              echo '   -h | --help         Show this information'
              echo '   -u | --usage        Show basic command-line usage'
              echo '   -v | --verbose      Display extra information'
              echo '   -V | --version      Display version information'
              echo
              echo 'Note: arguments are case sensitive.'
              echo  ;;
   esac

   exit 0
}

if [ "$#" -eq 0 ] ; then do_show_help 1 ; fi
if [ "$1" = "-h" ] || [ "$1" = "--help" ] ; then do_show_help 2 ; fi
if [ "$1" = "-u" ] || [ "$1" = "--usage" ] ; then do_show_help 2 ; fi
if [ "$1" = "-v" ] || [ "$1" = "--verbose" ] ; then VERBOSE=true ; shift ; fi
if [ "$1" = "-V" ] || [ "$1" = "--version" ] ; then echo `basename $0` "Version $VER"; return 0 ; fi

FNAME="$1"
if [ ! -f "$FNAME" ]; then
  echo "File not found: $FNAME" $GREEN
  exit $ERR_FILE_NOT_FOUND
fi

tmpdir=/tmp/$$
mkdir -m 0700 -p $tmpdir
rc=$?
if test $rc -ne 0 ; then
	cat << EOF

$0: ERROR -- Failed to create $tmpdir with 0700 permissions. mkdir returned $rc.

Make sure that $tmpdir does not already exist and that you have permissions to
create it.

EOF
	exit 1
fi
tmpf=${tmpdir}/tmpf
grep -B1 refdes= "$FNAME" |sed 's/=/ /' | cut -d" " -f2,3 |grep -v '^--' >${tmpf}

while read REPLY; do
    # the directory on the client to backup
    X=`echo $REPLY | cut -d' ' -f1`
    Y=`echo $REPLY | cut -d' ' -f2`
    read REPLY;
    PART="$REPLY"
    X=`echo "scale=5; ($X - $XOFFSET) / $XSCALE" |bc`
    Y=`echo "scale=5; ($Y - $YOFFSET) / $YSCALE" |bc`
    echo "MOVE '$PART' ($X $Y);"
done < $tmpf
rm -fr "${tmpdir}"
