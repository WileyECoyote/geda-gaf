#!/bin/bash

VER=1.0

# Author: Wiley Edward Hill
# Date: 04/16/13
#

BIN_DIR=@prefix@/bin
LOCAL_BIN=/usr/local/bin

ERR_FILE_NOT_FOUND=2
ERR_PATH_NOT_FOUND=3
ERR_BAD_ARGS=65

LAST_ARG=""
VERBOSE=false
OVERRIDE_BIN=false
OVERRIDE_DESTINY=false
DO_TRIM=true

vecho()
{
   if [[ ! $1 = "" ]] ; then
     if $VERBOSE ; then
      echo $1
     fi
   fi
}

do_show_usage()
{
   echo Usage: `basename $0` '[OPTIONS] [-d folder_with_programs ] [-l folder_in_path ]'
}

do_show_help(){
echo
echo Quick:   `basename $0` 'just run without in arguments after compiling a geda-gaf pkg'
echo
echo "Abstract: This script is for creating shortcut links, usually referred to as"
echo "          soft links for all of the files in the geda bin folder, both scripts"
echo "          and binaries, in the local/bin folder. By default, extensions are"
echo "          removed from the script names. This script is useful after installing"
echo "          from the source, rather than a distribution and can be ran after \"make"
echo "          install\" completes successfully to add links in the command path"
echo
echo "Options: -h, --help       Show this information"
echo "         -u, --usage      Show basic usage information"
echo "         -v, --verbose    Display extra information during processing"
echo "             --version    Display software version information"
echo
echo "         -d, --directory  folder containing files to be linked"
echo "         -l, --location   folder where links are to be created"
echo "         -n, --no-trim    do not trim extensions"
}

ParseCommandLine(){
   for Arg in $*; do
      case $Arg in
         --help | -h) do_show_help  ; exit 0                          ;;
        --usage | -u) do_show_usage ; exit 0                          ;;
      --verbose | -v) VERBOSE=true                                    ;;
           --version) echo `basename $0` "Version $VER" ; exit        ;;

    --directory | -d) OVERRIDE_BIN=true                               ;;
     --location | -l) OVERRIDE_DESTINY=true                           ;;
      --no-trim | -n) DO_TRIM=false                                   ;;
    	            *) case $LAST_ARG in
                       --directory | -d) DesiredDir="$Arg"            ;;
                        --location | -l) DesiredDestiny="$Arg"        ;;
                    *) do_show_usage ; exit $ERR_BAD_ARGS             ;;
                       esac                                           ;;
      esac
      LAST_ARG=$Arg
   done
}

# ------------------------ Parse Command Line ---------------------
# Excute the function we just defined!
ParseCommandLine $*

if $OVERRIDE_BIN ; then
  if [ -d "$DesiredDir" ] ; then
    BIN_DIR="$DesiredDir"
  else
    echo "Error: $DesiredDir does not exist!"
    exit $ERR_PATH_NOT_FOUND;
  fi
fi

if $OVERRIDE_DESTINY ; then
  if [ -d "$DesiredDestiny" ] ; then
    LOCAL_BIN="$DesiredDestiny"
  else
    echo "Error: $DesiredDestiny does not exist!"
    exit $ERR_PATH_NOT_FOUND;
  fi
fi

vecho "finding all targets in $BIN_DIR"
vecho "setting up shortcuts link in $LOCAL_BIN"

for prog in $BIN_DIR/*; do
  link_name=`basename $prog`
  if $DO_TRIM ; then
    target_name="${link_name%.*}"
    shortcut="$LOCAL_BIN/$target_name"
  else
    shortcut="$LOCAL_BIN/$link_name"
  fi
  if [ ! -f "$shortcut" ] ; then
     ln -sf $prog $shortcut;
     vecho "Creating a link for $prog as $shortcut";
  else
     vecho "Not creating a link for $prog as $shortcut";
  fi
done

exit 0;


